#include "analog_joystick.hpp"

// This LUT fix dead zone and can allow non linear behaviour
const PROGMEM int16_t JOYSTICK_LUT[1024] = {-32768, -32640, -32512, -32385, -32258, -32131, -32004, -31878, -31752, -31626, -31500, -31375, -31250, -31125, -31000, -30876, -30752,
                                            -30628, -30504, -30381, -30258, -30135, -30012, -29890, -29768, -29646, -29524, -29403, -29282, -29161, -29040, -28920, -28800,
                                            -28680, -28560, -28441, -28322, -28203, -28084, -27966, -27848, -27730, -27612, -27495, -27378, -27261, -27144, -27028, -26912,
                                            -26796, -26680, -26565, -26450, -26335, -26220, -26106, -25992, -25878, -25764, -25651, -25538, -25425, -25312, -25200, -25088,
                                            -24976, -24864, -24753, -24642, -24531, -24420, -24310, -24200, -24090, -23980, -23871, -23762, -23653, -23544, -23436, -23328,
                                            -23220, -23112, -23005, -22898, -22791, -22684, -22578, -22472, -22366, -22260, -22155, -22050, -21945, -21840, -21736, -21632,
                                            -21528, -21424, -21321, -21218, -21115, -21012, -20910, -20808, -20706, -20604, -20503, -20402, -20301, -20200, -20100, -20000,
                                            -19900, -19800, -19701, -19602, -19503, -19404, -19306, -19208, -19110, -19012, -18915, -18818, -18721, -18624, -18528, -18432,
                                            -18336, -18240, -18145, -18050, -17955, -17860, -17766, -17672, -17578, -17484, -17391, -17298, -17205, -17112, -17020, -16928,
                                            -16836, -16744, -16653, -16562, -16471, -16380, -16290, -16200, -16110, -16020, -15931, -15842, -15753, -15664, -15576, -15488,
                                            -15400, -15312, -15225, -15138, -15051, -14964, -14878, -14792, -14706, -14620, -14535, -14450, -14365, -14280, -14196, -14112,
                                            -14028, -13944, -13861, -13778, -13695, -13612, -13530, -13448, -13366, -13284, -13203, -13122, -13041, -12960, -12880, -12800,
                                            -12720, -12640, -12561, -12482, -12403, -12324, -12246, -12168, -12090, -12012, -11935, -11858, -11781, -11704, -11628, -11552,
                                            -11476, -11400, -11325, -11250, -11175, -11100, -11026, -10952, -10878, -10804, -10731, -10658, -10585, -10512, -10440, -10368,
                                            -10296, -10224, -10153, -10082, -10011, -9940, -9870, -9800, -9730, -9660, -9591, -9522, -9453, -9384, -9316, -9248,
                                            -9180, -9112, -9045, -8978, -8911, -8844, -8778, -8712, -8646, -8580, -8515, -8450, -8385, -8320, -8256, -8192,
                                            -8128, -8064, -8001, -7938, -7875, -7812, -7750, -7688, -7626, -7564, -7503, -7442, -7381, -7320, -7260, -7200,
                                            -7140, -7080, -7021, -6962, -6903, -6844, -6786, -6728, -6670, -6612, -6555, -6498, -6441, -6384, -6328, -6272,
                                            -6216, -6160, -6105, -6050, -5995, -5940, -5886, -5832, -5778, -5724, -5671, -5618, -5565, -5512, -5460, -5408,
                                            -5356, -5304, -5253, -5202, -5151, -5100, -5050, -5000, -4950, -4900, -4851, -4802, -4753, -4704, -4656, -4608,
                                            -4560, -4512, -4465, -4418, -4371, -4324, -4278, -4232, -4186, -4140, -4095, -4050, -4005, -3960, -3916, -3872,
                                            -3828, -3784, -3741, -3698, -3655, -3612, -3570, -3528, -3486, -3444, -3403, -3362, -3321, -3280, -3240, -3200,
                                            -3160, -3120, -3081, -3042, -3003, -2964, -2926, -2888, -2850, -2812, -2775, -2738, -2701, -2664, -2628, -2592,
                                            -2556, -2520, -2485, -2450, -2415, -2380, -2346, -2312, -2278, -2244, -2211, -2178, -2145, -2112, -2080, -2048,
                                            -2016, -1984, -1953, -1922, -1891, -1860, -1830, -1800, -1770, -1740, -1711, -1682, -1653, -1624, -1596, -1568,
                                            -1540, -1512, -1485, -1458, -1431, -1404, -1378, -1352, -1326, -1300, -1275, -1250, -1225, -1200, -1176, -1152,
                                            -1128, -1104, -1081, -1058, -1035, -1012, -990, -968, -946, -924, -903, -882, -861, -840, -820, -800,
                                            -780, -760, -741, -722, -703, -684, -666, -648, -630, -612, -595, -578, -561, -544, -528, -512,
                                            -496, -480, -465, -450, -435, -420, -406, -392, -378, -364, -351, -338, -325, -312, -300, -288,
                                            -276, -264, -253, -242, -231, -220, -210, -200, -190, -180, -171, -162, -153, -144, -136, -128,
                                            -120, -112, -105, -98, -91, -84, -78, -72, -66, -60, -55, -50, -45, -40, -36, -32,
                                            -28, -24, -21, -18, -15, -12, -10, -8, -6, -4, -3, -2, -1, 0, 0, 0,
                                            64, 64, 65, 66, 67, 68, 70, 72, 74, 76, 79, 82, 85, 88, 92, 96,
                                            100, 104, 109, 114, 119, 124, 130, 136, 142, 148, 155, 162, 169, 176, 184, 192,
                                            200, 208, 217, 226, 235, 244, 254, 264, 274, 284, 295, 306, 317, 329, 340, 352,
                                            364, 377, 389, 402, 415, 429, 442, 456, 470, 485, 499, 514, 530, 545, 561, 577,
                                            593, 609, 626, 643, 660, 677, 695, 713, 731, 749, 768, 787, 806, 825, 845, 865,
                                            885, 906, 926, 947, 968, 990, 1011, 1033, 1056, 1078, 1101, 1124, 1147, 1170, 1194, 1218,
                                            1242, 1266, 1291, 1316, 1341, 1367, 1392, 1418, 1444, 1471, 1497, 1524, 1552, 1579, 1607, 1635,
                                            1663, 1691, 1720, 1749, 1778, 1807, 1837, 1867, 1897, 1928, 1958, 1989, 2020, 2052, 2084, 2116,
                                            2148, 2180, 2213, 2246, 2279, 2312, 2346, 2380, 2414, 2449, 2483, 2518, 2553, 2589, 2625, 2661,
                                            2697, 2733, 2770, 2807, 2844, 2882, 2919, 2957, 2995, 3034, 3073, 3111, 3151, 3190, 3230, 3270,
                                            3310, 3350, 3391, 3432, 3473, 3515, 3556, 3598, 3641, 3683, 3726, 3769, 3812, 3855, 3899, 3943,
                                            3987, 4032, 4076, 4121, 4167, 4212, 4258, 4304, 4350, 4396, 4443, 4490, 4537, 4585, 4633, 4681,
                                            4729, 4777, 4826, 4875, 4924, 4974, 5023, 5073, 5124, 5174, 5225, 5276, 5327, 5378, 5430, 5482,
                                            5534, 5587, 5640, 5692, 5746, 5799, 5853, 5907, 5961, 6016, 6070, 6125, 6181, 6236, 6292, 6348,
                                            6404, 6460, 6517, 6574, 6631, 6689, 6747, 6805, 6863, 6921, 6980, 7039, 7098, 7158, 7218, 7278,
                                            7338, 7398, 7459, 7520, 7581, 7643, 7705, 7767, 7829, 7891, 7954, 8017, 8080, 8144, 8208, 8272,
                                            8336, 8400, 8465, 8530, 8595, 8661, 8727, 8793, 8859, 8925, 8992, 9059, 9126, 9194, 9262, 9330,
                                            9398, 9466, 9535, 9604, 9673, 9743, 9813, 9883, 9953, 10023, 10094, 10165, 10236, 10308, 10380, 10452,
                                            10524, 10597, 10669, 10742, 10816, 10889, 10963, 11037, 11111, 11186, 11260, 11336, 11411, 11486, 11562, 11638,
                                            11714, 11791, 11868, 11945, 12022, 12100, 12177, 12255, 12334, 12412, 12491, 12570, 12649, 12729, 12809, 12889,
                                            12969, 13049, 13130, 13211, 13292, 13374, 13456, 13538, 13620, 13703, 13785, 13868, 13952, 14035, 14119, 14203,
                                            14287, 14372, 14457, 14542, 14627, 14713, 14798, 14884, 14971, 15057, 15144, 15231, 15318, 15406, 15494, 15582,
                                            15670, 15759, 15847, 15937, 16026, 16115, 16205, 16295, 16386, 16476, 16567, 16658, 16749, 16841, 16933, 17025,
                                            17117, 17209, 17302, 17395, 17489, 17582, 17676, 17770, 17864, 17959, 18054, 18149, 18244, 18340, 18436, 18532,
                                            18628, 18724, 18821, 18918, 19016, 19113, 19211, 19309, 19407, 19506, 19605, 19704, 19803, 19903, 20003, 20103,
                                            20203, 20304, 20404, 20505, 20607, 20708, 20810, 20912, 21015, 21117, 21220, 21323, 21426, 21530, 21634, 21738,
                                            21842, 21947, 22052, 22157, 22262, 22368, 22473, 22579, 22686, 22792, 22899, 23006, 23114, 23221, 23329, 23437,
                                            23545, 23654, 23763, 23872, 23981, 24091, 24201, 24311, 24421, 24532, 24643, 24754, 24865, 24977, 25089, 25201,
                                            25313, 25426, 25538, 25651, 25765, 25878, 25992, 26106, 26221, 26335, 26450, 26565, 26681, 26796, 26912, 27028,
                                            27145, 27261, 27378, 27495, 27612, 27730, 27848, 27966, 28084, 28203, 28322, 28441, 28560, 28680, 28800, 28920,
                                            29040, 29161, 29282, 29403, 29524, 29646, 29768, 29890, 30012, 30135, 30258, 30381, 30504, 30628, 30752, 30876,
                                            31000, 31125, 31250, 31375, 31500, 31626, 31752, 31878, 32004, 32131, 32258, 32385, 32512, 32640, 32767};

#define MIN_ADC (0)
#define MAX_ADC (1023)
#define MIN_INT16 (-32768) 
#define MAX_INT16 (32767) 

void AnalogJoystick::begin(uint8_t pin_x, uint8_t pin_y)
{
    this->pin_x = pin_x;
    this->pin_y = pin_y;
    // x = 0;
    // y = 0;
}

// to be called on Pin A raising
void AnalogJoystick::update(void)
{
    int16_t tmp_x = analogRead(this->pin_x);
    int16_t tmp_y = analogRead(this->pin_y);

    this->x = this->transform_ADC(tmp_x);
    this->y = this->transform_ADC(tmp_y);
}

int16_t AnalogJoystick::transform_ADC(int16_t value)
{
    // validate range
    if (value > MAX_ADC) value = MAX_ADC;
    if (value < MIN_ADC) value = MIN_ADC;

    int16_t tmp_x = pgm_read_word_near(JOYSTICK_LUT + value);

    return tmp_x;
}

int16_t AnalogJoystick::get_left_track(void)
{
    return this->transform_to_left_track(this->x, this->y);
}

int16_t AnalogJoystick::get_right_track(void)
{
    return this->transform_to_right_track(this->x, this->y);
}

int16_t AnalogJoystick::get_x(void)
{
    return this->x;
}

int16_t AnalogJoystick::get_y(void)
{
    return this->y;
}

int16_t AnalogJoystick::transform_to_left_track(int16_t x, int16_t y)
{
    if (y <= 0)
    {
        return x;
    }
    else
    {
        int32_t complement_y = MAX_INT16 - y;
        int32_t tmp_x = x;
        int32_t result = (complement_y * tmp_x) >> 15;

        return (int16_t)result;
    }
}

int16_t AnalogJoystick::transform_to_right_track(int16_t x, int16_t y)
{
    // full power on the track
    if (y >= 0)
    {
        return x;
    }
    else
    {
        int32_t complement_y = -MIN_INT16 + y;
        int32_t tmp_x = x;
        int32_t result = (complement_y * tmp_x) >> 15;

        return (uint16_t)result;
    }
}
